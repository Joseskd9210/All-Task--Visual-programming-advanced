<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="illista.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="illista.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACK
        DgAAAk1TRnQBSQFMAgEBAgEAARgBAAEYAQABIAEAASABAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABgAMAASADAAEBAQABCAYAARAYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wEAAQsFAAYLAg4BAAQL
        AQ4CCwcAAQsBDgEAAesI7AHrD+wH60EAAgsBDgQLAR4QCwMAAQ4BAAILBewB6wEUAUMCFAJsARQCEQFD
        AQ4BDwENARUBZgEUBBUDFAJmAWxCAAcLAiMBCwEOAgsBIwcLAQ4ECwEOAwAF7AMUARAB6wHsAm0BFAEP
        AesBEAFDAewB6wFtARICEwEUAQ4BDwIUA2xAAAgLAQAGCwEOBQsBIwYLAg4BAAELBewBEAETAeoBFASS
        ARIBDQFtAWYBbAHrBuwBEAERAW0C6gEUARVAAAgLAiIECwEPAwsBIwELAgABCwEjAQABDgULAQ4E7AHt
        Aa4BQwFtAa4D7QH3AW0BZgEKAQ0BbAOSAe0C7AHrARABDQEQA+sBbUAAAh4BCwIjAwsCDgILASMDCwEj
        AgsBIwEiAwsBIgEOBgsD7ALtAa4CZgGLBPcBbQFsAgoBZgL3AZIC7AHtAesBFQEKAQ4E7EAAAQsCAAIO
        BQsBIgEjASIDIwELBCMBCwEiCQsB7APtAZIBkQNsAZID9wHqAWYBDgEAAWYG9wFsAWUBCgEQAe0D7EAA
        AQsBDggLCyMBJAMjBAsCDgELAewD7QL3Aa4CbAHtA/cBbQENAQ4BAAFmBfcB7AJsAQ4BFQGSAu0B7EAA
        BgsCIgELASIDIwokASMCJAEjAR4ECwG8AvACvAHvAbUBrgFsAewB8QHwAfEB7AENAQoBAAENAbUB8ALx
        AQcBbAERAWYBDgFtAfMC8QHdQAAFCwEiAgsBIxAkBCMDCwP0AbwB8wG8AbsBkQGuAesB8wH/AfQB9wEN
        Ag4BCgG0A/QB7AFtAQ4BZgEOAe8E9EAABCIBIwEiBCMRJAEjAR4DCwP0AvABvAHzAbUC7AEHAvQB7wEN
        AQoBDgEKAa4C/wG8Aa4BFQEAAQ0BDgHwAv8C9EAAAQsCIgQjAiQCIwMkAyUBJAUlBCQBHgELAR4CCwEZ
        A/QCBwG8AfcB7QH3Ae8C9AEHAQ0BCgEAAQoBbAHzAf8B7wFtAQ4BCgENAQ4B9AP/AfRAAAsiASMBJAkl
        BCQCIwEiAwsC9AL/Ae8BvAHvAe0C9wEHAvQBvAENAQoBAAEOAWYBvAH/Ae0BQwMKAQ4F/0AAAiIBEAIi
        BkQBIgEPASQCJQErBSUCJAEjAiICIwMiAvQC/wHvAbwB7wH3AZEBFQEHAfQB/wHxAWYBDQEKAQ4BDQHv
        ARIB6gEOAwoBFQX/QAABDgEQAiMIRAFFARECJQIrAiUBKwIlASQHIwEiAfQD/wH3AbwB7wG1AZEBAAHs
        AfQB/wHyAWYBDQIOAQoBbQFDAQ0DCgEOAesC/wL0Af9AAAEOAQ8BRAlFAksBEAElASsBJQEkAyUBJANE
        AUMCIgMjARkC9AEZAbUB7wG1AQkBtQEQAQ8B7wL0AWYBDQEOAgoBEQIKAmYCDgH3Af8B9AIZAfRAAAJE
        AREBEAFEA0UBEQNLAkwBEQJMASUBJAJMASUBRQZEAkMBEQEJAt0BCQG1AW0BtQEJAbUB7AINAewBkgFs
        AQ0CCgENAQ4BCgENAbUBZgIAAbUC3QIZAfRAAAESAuoBSgETAUQBRQFuAksETAFFB0wBSwFFAkQBFQER
        BEQBCQPdAQkBEAHsAQkBuwG8Aa4CZgENAeoBZgENAQ4BDQEKAWUBtQEJAWwBAAEOAQkB3QEJAd0BGQH0
        QAAC7wMHAZMBSwIHAbwBmQFvBkwBSwNMAXQB7AJLBkQDCQLdAWYBbQIJAbwB7wHsAWwBZgFtAWwBDQEK
        AWUBDQGuAgkBbAEOAREC3QEJA91AAAPwAfEC8gEHBPIB8AGTAXQBkwZMAXQBBwG8Au8B9wGSAe0D7AQJ
        Ad0BtAHrAgkBvAHrAWwBkQG1AZEB9wENAQoBDQGLAbUBCQG7AQ0BCgHqARkF3UAAAvEDGQbyBPMBdAVM
        AZMBGQHxBPAEvAIJA90BCQHsAfABCQG8Aa4BCQPdAe8BZgEKAQ0BkQEHAbwBkgINAewBGQHdARkD3UAA
        AQkPGQEcAUwBSwJMAfADGQkJAt0CGQHtAfACvAHdBBkB8AHsAg0B7wHzAfEBcwINAbUBGQTdAQlAAAQJ
        DRkCvAEHAbwDGQkJA90CGQGSARoBmQG8BhkBvAEVAQ0B8AH/ARsBcwINAbUD3QEJAd0BCUAABAkB3REZ
        CwkF3QEHAaABeQHwAt0EGQH3AQ8BDQEZAfQB9gEcAQ0BDgEJAt0ECUAAJgkB8wGaAVIHCQEPAQABZgHd
        ARkBwwFzAWUBDwcJQAAgCQG7BQkBvAEcAUQGCQFtAQ8BAAHvAgkBoAFzAWwBDQcJQAACCQG7GgkCuwG1
        AbsECQG7AXkBDgEAAeoECQGRARQBbAGRAtwBCQEIAZkBBwFsBwlAAAK0BLsBCQPcCQkG3AMJAbsDtAG7
        AQkFuwFsAQ4BSgHsAbsBCQK0AdwFCQGSAUMBdAGLBwlAAAe0AboBuw7cAboItAK6CLsBtAGRAwkD3AIJ
        Au8BZgFSAbUCCQHcAgkCu0AAILQEugW7AroBuwHcAgkE3AUJA9wDuwK6QAAgtAW6CLsL3AG7BboCtEAA
        A7MdtAS6CrsD3AG7A7oDuwW6A7RAAAFCAU0BPgcAAT4DAAEoAwABgAMAASADAAEBAQABAQYAAQIWAAP/
        /wD/AAMACw==
</value>
  </data>
</root>